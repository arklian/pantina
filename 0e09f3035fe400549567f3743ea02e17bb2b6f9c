{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f0542641_e1bb9657",
        "filename": "js/src/patina/admin/blog/AdminBlog.page.tsx",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 1038171
      },
      "writtenOn": "2024-08-09T20:44:25Z",
      "side": 1,
      "message": "just checking, does this label have a functional purpose? If so, does it work w/ white space?",
      "revId": "0e09f3035fe400549567f3743ea02e17bb2b6f9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ac6f935_ed64461b",
        "filename": "js/src/patina/pages/blog/Blog.page.tsx",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1038171
      },
      "writtenOn": "2024-08-09T20:44:25Z",
      "side": 1,
      "message": "nit: can be easy to accidentally misuse this since it can be null if status !\u003d \u0027success\u0027. Instead, make local variables of the content that check status later and only define this in the \"happy path\" or use this data?. chaining everywhere.",
      "revId": "0e09f3035fe400549567f3743ea02e17bb2b6f9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3358f04_eadab297",
        "filename": "js/src/patina/pages/blog/ImageCard.tsx",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1038171
      },
      "writtenOn": "2024-08-09T20:44:25Z",
      "side": 1,
      "message": "nit: put this in its own function/hook since I can see this being reused for other fields in the json string",
      "revId": "0e09f3035fe400549567f3743ea02e17bb2b6f9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "313b9d74_ee2789a9",
        "filename": "js/src/patina/pages/blog/ImageCard.tsx",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1038171
      },
      "writtenOn": "2024-08-09T20:44:25Z",
      "side": 1,
      "message": "nit: magical constants here. Not clear why or what 120 represents.",
      "revId": "0e09f3035fe400549567f3743ea02e17bb2b6f9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e7e633b_1d6c540a",
        "filename": "src/main/java/org/patinanetwork/patinawebsite/blogs/BlogsController.java",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1038171
      },
      "writtenOn": "2024-08-09T20:44:25Z",
      "side": 1,
      "message": "think about testability here. If we needed to do op.run() for listBLogs then maybe we can do something similar for getBlog to help test it",
      "revId": "0e09f3035fe400549567f3743ea02e17bb2b6f9c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one +2 vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003d+2,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Code-Review\u003d+2,user\u003darklian"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=+2,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=+2,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=+2,user=arklian"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=+2,user=arklian"],"failingAtoms":[]}
      },
      "patchSetCommitId": "0e09f3035fe400549567f3743ea02e17bb2b6f9c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}