{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "403a672c_c319b0b7",
        "filename": "js/src/patina/pages/community/events/MainSection.tsx",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-08-07T06:25:58Z",
      "side": 1,
      "message": "nit: should likely wrap this in {} \nI usually only make the exception for one line if early returns.",
      "range": {
        "startLine": 88,
        "startChar": 21,
        "endLine": 88,
        "endChar": 42
      },
      "revId": "ee40952751c4c14f4108ac4c449399be3d247862",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "badd0ec8_010378a3",
        "filename": "js/src/patina/pages/community/events/MainSection.tsx",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1038151
      },
      "writtenOn": "2024-08-07T23:10:02Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "403a672c_c319b0b7",
      "range": {
        "startLine": 88,
        "startChar": 21,
        "endLine": 88,
        "endChar": 42
      },
      "revId": "ee40952751c4c14f4108ac4c449399be3d247862",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2aebb06d_56dd7759",
        "filename": "js/src/patina/pages/community/events/MainSection.tsx",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-08-07T06:25:58Z",
      "side": 1,
      "message": "seems a bit annoying that we have to mark all of these types like this.\nI assume it\u0027s since we\u0027re doing optional chaining and it could be undefined?\n\nWonder if there\u0027s a cleaner way of doing this where we don\u0027t need to do it.\n\n\nMaybe (filteredEvents || []).filter",
      "revId": "ee40952751c4c14f4108ac4c449399be3d247862",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9008a509_b6e66a11",
        "filename": "js/src/patina/pages/community/events/MainSection.tsx",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1038151
      },
      "writtenOn": "2024-08-07T23:10:02Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "2aebb06d_56dd7759",
      "revId": "ee40952751c4c14f4108ac4c449399be3d247862",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one +2 vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003d+2,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Code-Review\u003d+2,user\u003darklian"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=+2,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=+2,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=+2,user=arklian"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=+2,user=arklian"],"failingAtoms":[]}
      },
      "patchSetCommitId": "ee40952751c4c14f4108ac4c449399be3d247862",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}