{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4da31772_4a5869b0",
        "filename": "js/src/patina/pages/blog/Blog.routes.tsx",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-08-09T20:30:58Z",
      "side": 1,
      "message": "I would probably rename this to like BlogHomePage or BlogLandingPage or BlogListPage and then have the one Blog page be like BlogPage",
      "revId": "ff1b97979560ce8dfdc23f8c8145120944f6299d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c8a5e6e_186a22fb",
        "filename": "js/src/patina/pages/blog/Blog.tsx",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-08-09T20:30:58Z",
      "side": 1,
      "message": "this should probably be at a higher level and not just for blogs.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 46
      },
      "revId": "ff1b97979560ce8dfdc23f8c8145120944f6299d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27945043_1c8763e6",
        "filename": "js/src/patina/pages/blog/Blog.tsx",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1038171
      },
      "writtenOn": "2024-08-09T20:28:44Z",
      "side": 1,
      "message": "nit: why are we forcing color schemes just for this pg",
      "revId": "ff1b97979560ce8dfdc23f8c8145120944f6299d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0f918de_5f345e52",
        "filename": "js/src/patina/pages/blog/Blog.tsx",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-08-09T20:32:30Z",
      "side": 1,
      "message": "This should also be at a higher level. You\u0027re supposed to have one provider for each of these for the App.\n\nWe\u0027re kind of in a model where we have one app for the normal site and one for the admin one right now, but it\u0027s probably better to just have one long term.",
      "parentUuid": "27945043_1c8763e6",
      "revId": "ff1b97979560ce8dfdc23f8c8145120944f6299d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8d6b3ce_f6a2df75",
        "filename": "js/src/patina/pages/blog/Blog.tsx",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1038171
      },
      "writtenOn": "2024-08-09T20:28:44Z",
      "side": 1,
      "message": "nit: feels weird that this page has its own navbar/footer instance. Ideally those should be done at the top level. Check w/ other pages if they do this. If the header/footer are already added somewhere else, we don\u0027t need it here too",
      "revId": "ff1b97979560ce8dfdc23f8c8145120944f6299d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5e05569_6ba9c81c",
        "filename": "js/src/patina/pages/blog/FocusedBlog.tsx",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1038171
      },
      "writtenOn": "2024-08-09T20:28:44Z",
      "side": 1,
      "message": "nit: ideally, we have this hook defined in a common location so this component doesn\u0027t need to know what the API endpoint is",
      "revId": "ff1b97979560ce8dfdc23f8c8145120944f6299d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f233b6f3_42b3fb40",
        "filename": "js/src/patina/pages/blog/FocusedBlog.tsx",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1038171
      },
      "writtenOn": "2024-08-09T20:28:44Z",
      "side": 1,
      "message": "nit: I think if data is null/undefined, then `blog` will be null/undefined and then doing `blog.image` will error out. So putting this here, but only branching off of `status \u003d\u003d\u003d \u0027success\u0027` later means its easy to accidentally use `blog.abc` incorrectly.\n\nSuggest checking status earlier and early return or not storing `blog`",
      "revId": "ff1b97979560ce8dfdc23f8c8145120944f6299d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82e5e34b_42ef3ef9",
        "filename": "js/src/patina/pages/blog/FocusedBlog.tsx",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1038171
      },
      "writtenOn": "2024-08-09T20:28:44Z",
      "side": 1,
      "message": "potentially out of scope for this CR, but do we plan on doing anything in case of error? even just logging / notification.",
      "revId": "ff1b97979560ce8dfdc23f8c8145120944f6299d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one +2 vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003d+2,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Code-Review\u003d+2,user\u003darklian"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=+2,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=+2,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=+2,user=arklian"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=+2,user=arklian"]}
      },
      "patchSetCommitId": "ff1b97979560ce8dfdc23f8c8145120944f6299d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}