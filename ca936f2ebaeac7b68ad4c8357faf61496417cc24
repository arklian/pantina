{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "701e9835_240b2a8e",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-07-23T17:41:29Z",
      "side": 1,
      "message": "Should this be a JS date object, or a dayjs date object?",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "779fe49d_1954583d",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1038148
      },
      "writtenOn": "2024-07-23T17:54:46Z",
      "side": 1,
      "message": "The logic works perfectly fine using JS Date objects, I don\u0027t think there\u0027s any point in using dayjs date objects instead",
      "parentUuid": "701e9835_240b2a8e",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03584867_24935bad",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1038148
      },
      "writtenOn": "2024-07-23T18:58:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "779fe49d_1954583d",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40a796a2_9ad38bdf",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-07-23T19:03:54Z",
      "side": 1,
      "message": "We likely don\u0027t want to create the object in the eventData, as we want it to be as simple as possible to fill in for a non technical user.\n\nAlso dates should be in iso format which prepends a 0 to days/months that are one digit.\n\n2024-07-08",
      "parentUuid": "779fe49d_1954583d",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5766fce_ecdc08db",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1038148
      },
      "writtenOn": "2024-07-23T21:01:59Z",
      "side": 1,
      "message": "Changed to store raw string in ISO format inside eventsData instead and made a function to convert raw string to Date object",
      "parentUuid": "40a796a2_9ad38bdf",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c54a4256_e75a1960",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-07-23T19:03:54Z",
      "side": 1,
      "message": "this can be a lot shorter with using different JS things.",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f210b7b_fb917530",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-07-23T19:03:54Z",
      "side": 1,
      "message": "You can use js\u0027s some function here.\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8017e8c_487e1dde",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-07-23T19:03:54Z",
      "side": 1,
      "message": "Note: This doesn\u0027t scale with more events, and we should probably use like a hash table or something to store events at a larger scale, but for this use case this is good.",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d1bfc16_3d064572",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1038148
      },
      "writtenOn": "2024-07-23T21:01:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d8017e8c_487e1dde",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "871029cf_db5680a0",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1038148
      },
      "writtenOn": "2024-07-23T21:01:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f210b7b_fb917530",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebf7da66_f431e0bb",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1038148
      },
      "writtenOn": "2024-07-23T21:01:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c54a4256_e75a1960",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ff11aba_3ee6beeb",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-07-23T19:03:54Z",
      "side": 1,
      "message": "Your variable names should be more clear here. You\u0027re comparing dateObject to date. What do those two represent.",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf40ce75_ec3afc6b",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-07-23T19:03:54Z",
      "side": 1,
      "message": "You should not be comparing the localeDateString, only the raw value.\nIn this case it would be the iso date string.\n\nAlso this probably does not handle time zones. The JS Date object always localizes the date/time, so it puts it in your computer\u0027s browser\u0027s timezone. Since NYC is at UTC-4, there\u0027s likely time near midnight where the date will be offset by one day.",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d4cd5fe_46f795b7",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1038148
      },
      "writtenOn": "2024-07-23T21:01:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ff11aba_3ee6beeb",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff7417d5_5aa8f162",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1038148
      },
      "writtenOn": "2024-07-23T21:01:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf40ce75_ec3afc6b",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78c85529_f27b9e25",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1038141
      },
      "writtenOn": "2024-07-23T19:03:54Z",
      "side": 1,
      "message": "We could consider using a library like clsx to do conditional class names.\nhttps://github.com/lukeed/clsx",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65c8ecde_080cbe0b",
        "filename": "js/src/patina/community/events/MainSection.tsx",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1038148
      },
      "writtenOn": "2024-07-23T21:01:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "78c85529_f27b9e25",
      "revId": "ca936f2ebaeac7b68ad4c8357faf61496417cc24",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}